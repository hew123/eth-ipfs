{"ast":null,"code":"var _jsxFileName = \"/Users/hewhew/Downloads/create react app/eth-ipfs/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transanctionHash: '',\n      gasUsed: '',\n      txReceipt: '',\n      storedHash: ''\n    };\n\n    this.captureFile = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadrend = () => this.convertToBuffer(reader);\n    };\n\n    this.convertToBuffer = async reader => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({\n        buffer\n      });\n    };\n\n    this.onClick = async () => {\n      try {\n        this.setState({\n          blockNumber: \"waiting..\"\n        });\n        this.setState({\n          gasUsed: \"waiting..\"\n        });\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {\n          console.log(err, txReceipt);\n          this.setState({\n            txReceipt\n          });\n        });\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.state.txReceipt.gasUsed\n        });\n      } //end of try {\n      catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault(); //user's metamask account\n\n      const accounts = await web3.eth.getAccounts();\n      console.log('Sending from Metamask account: ' + accounts[0]);\n      const ethAddress = await storehash.options.address;\n      this.setState({\n        ethAddress\n      }); //upload to ipfs\n\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        }); //call contract methods\n\n        storehash.methods.saveHash(this.state.ipfsHash).send({\n          from: accounts[0]\n        }, (error, transactionHash) => {\n          console.log(transactionHash);\n          this.setState({\n            transactionHash\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Ethereum and IPFS with Create React App\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"grid\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" get hash and save hash\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSetHash: this.onSetHash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      bsStyle: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Send it \")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Choose file to send to IPFS \"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.captureFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      bsStyle: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Send it \")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" = \", this.onClick, \"> Get Transaction Receipt \"), React.createElement(\"table\", {\n      bordered: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Tx Receipt Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Values\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"IPFS Hash # stored on Eth Contract\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.ipfsHash)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Ethereum Contract Address\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.ethAddress)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Tx Hash # \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.transactionHash)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Block Number # \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.blockNumber)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Gas Used\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.gasUsed)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Get Hash\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.storedHash))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hewhew/Downloads/create react app/eth-ipfs/src/App.js"],"names":["React","Component","web3","ipfs","storehash","App","state","ipfsHash","buffer","ethAddress","blockNumber","transanctionHash","gasUsed","txReceipt","storedHash","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadrend","convertToBuffer","Buffer","from","result","setState","onClick","eth","getTransactionReceipt","transactionHash","err","console","log","error","onSubmit","accounts","getAccounts","options","address","add","hash","methods","saveHash","send","render","onSetHash"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component{\n\n  state = {\n    ipfsHash:null,\n    buffer:'',\n    ethAddress:'',\n    blockNumber:'',\n    transanctionHash:'',\n    gasUsed:'',\n    txReceipt:'',\n    storedHash:''\n  };\n\n  captureFile = (event) =>{\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n    let reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadrend = () => this.convertToBuffer(reader)\n  };\n\n    convertToBuffer = async(reader) => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({buffer});\n    }\n\n    onClick = async() =>{\n      try{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting..\"});\n        await web3.eth.getTransactionReceipt(this.state.transactionHash,\n          (err,txReceipt) => {\n            console.log(err,txReceipt);\n            this.setState({txReceipt});\n          });\n\n          await this.setState({blockNumber:this.state.txReceipt.blockNumber});\n\n          await this.setState({gasUsed:this.state.txReceipt.gasUsed});\n        }//end of try {\n        catch(error){\n          console.log(error);\n        }\n      }//end of onClick\n\n      onSubmit = async (event) =>{\n        event.preventDefault();\n\n        //user's metamask account\n        const accounts = await web3.eth.getAccounts();\n        console.log('Sending from Metamask account: ' + accounts[0]);\n\n        const ethAddress = await storehash.options.address;\n        this.setState({ethAddress});\n\n        //upload to ipfs\n        await ipfs.add(this.state.buffer,(err,ipfsHash) => {\n          console.log(err,ipfsHash);\n          this.setState({ipfsHash:ipfsHash[0].hash});\n\n          //call contract methods\n          storehash.methods.saveHash(this.state.ipfsHash).send(\n            {from:accounts[0]},(error,transactionHash) => {\n              console.log(transactionHash);\n              this.setState({transactionHash});\n            });\n          })\n        };\n\n    render(){\n      return(\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1> Ethereum and IPFS with Create React App</h1>\n          </header>\n          <hr/>\n          <grid>\n          <h3> get hash and save hash</h3>\n          <hr/>\n\n            <form onSetHash = {this.onSetHash}>\n              <input type=\"text\"/>\n              <button bsStyle=\"primary\" type=\"submit\">\n                  Send it </button>\n                  </form>\n            <hr/>\n            <h3> Choose file to send to IPFS </h3>\n            <form onSubmit={this.onSubmit}>\n              <input type=\"file\"\n                onChange={this.captureFile}/>\n                <button bsStyle=\"primary\" type=\"submit\">\n                    Send it </button>\n                    </form>\n                    <hr/>\n                    <button onClick> = {this.onClick}> Get Transaction Receipt </button>\n\n          <table bordered responsive>\n                <thead>\n                  <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr>\n                    <td>IPFS Hash # stored on Eth Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                  </tr>\n                  <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                  </tr>\n                  <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                  </tr>\n                  <tr>\n                    <td>Block Number # </td>\n                    <td>{this.state.blockNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                  </tr>\n                  <tr>\n                    <td>Get Hash</td>\n                    <td>{this.state.storedHash}</td>\n                  </tr>\n\n                </tbody>\n            </table>\n        </grid>\n     </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}