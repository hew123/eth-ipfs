{"ast":null,"code":"import React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transanctionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n\n    this.captureFile = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadrend = () => this.convertToBuffer(reader);\n    };\n\n    this.convertToBuffer = async reader => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({\n        buffer\n      });\n    };\n\n    this.onClick = async () => {\n      try {\n        this.setState({\n          blockNumber: \"waiting..\"\n        });\n        this.setState({\n          gasUsed: \"waiting..\"\n        });\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {\n          console.log(err, txReceipt);\n          this.setState({\n            txReceipt\n          });\n        });\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.state.txReceipt.gasUsed\n        });\n      } //end of try {\n      catch (error) {\n        console.log(error);\n      }\n    };\n  } //end of onClick\n\n\n}","map":{"version":3,"sources":["/Users/hewhew/Downloads/create react app/eth-ipfs/src/App.js"],"names":["React","Component","web3","ipfs","storehash","App","state","ipfsHash","buffer","ethAddress","blockNumber","transanctionHash","gasUsed","txReceipt","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadrend","convertToBuffer","Buffer","from","result","setState","onClick","eth","getTransactionReceipt","transactionHash","err","console","log","error"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBK,KAFyB,GAEjB;AACNC,MAAAA,QAAQ,EAAC,IADH;AAENC,MAAAA,MAAM,EAAC,EAFD;AAGNC,MAAAA,UAAU,EAAC,EAHL;AAINC,MAAAA,WAAW,EAAC,EAJN;AAKNC,MAAAA,gBAAgB,EAAC,EALX;AAMNC,MAAAA,OAAO,EAAC,EANF;AAONC,MAAAA,SAAS,EAAC;AAPJ,KAFiB;;AAAA,SAYzBC,WAZyB,GAYVC,KAAD,IAAU;AACtBA,MAAAA,KAAK,CAACC,eAAN;AACAD,MAAAA,KAAK,CAACE,cAAN;AACA,YAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAIC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAb;AACAF,MAAAA,MAAM,CAACG,iBAAP,CAAyBN,IAAzB;;AACAG,MAAAA,MAAM,CAACI,UAAP,GAAoB,MAAM,KAAKC,eAAL,CAAqBL,MAArB,CAA1B;AACD,KAnBwB;;AAAA,SAqBvBK,eArBuB,GAqBL,MAAML,MAAN,IAAiB;AACjC,YAAMb,MAAM,GAAG,MAAMmB,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACQ,MAAnB,CAArB;AACA,WAAKC,QAAL,CAAc;AAACtB,QAAAA;AAAD,OAAd;AACD,KAxBsB;;AAAA,SA0BvBuB,OA1BuB,GA0Bb,YAAU;AAClB,UAAG;AACD,aAAKD,QAAL,CAAc;AAACpB,UAAAA,WAAW,EAAC;AAAb,SAAd;AACA,aAAKoB,QAAL,CAAc;AAAClB,UAAAA,OAAO,EAAC;AAAT,SAAd;AACA,cAAMV,IAAI,CAAC8B,GAAL,CAASC,qBAAT,CAA+B,KAAK3B,KAAL,CAAW4B,eAA1C,EACJ,CAACC,GAAD,EAAKtB,SAAL,KAAmB;AACjBuB,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgBtB,SAAhB;AACA,eAAKiB,QAAL,CAAc;AAACjB,YAAAA;AAAD,WAAd;AACD,SAJG,CAAN;AAME,cAAM,KAAKiB,QAAL,CAAc;AAACpB,UAAAA,WAAW,EAAC,KAAKJ,KAAL,CAAWO,SAAX,CAAqBH;AAAlC,SAAd,CAAN;AAEA,cAAM,KAAKoB,QAAL,CAAc;AAAClB,UAAAA,OAAO,EAAC,KAAKN,KAAL,CAAWO,SAAX,CAAqBD;AAA9B,SAAd,CAAN;AACD,OAZH,CAYG;AACD,aAAM0B,KAAN,EAAY;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KA3CoB;AAAA,IA2CpB;;;AA3CoB","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component{\n\n  state = {\n    ipfsHash:null,\n    buffer:'',\n    ethAddress:'',\n    blockNumber:'',\n    transanctionHash:'',\n    gasUsed:'',\n    txReceipt:''\n  };\n\n  captureFile = (event) =>{\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n    let reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadrend = () => this.convertToBuffer(reader)\n  };\n\n    convertToBuffer = async(reader) => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({buffer});\n    }\n\n    onClick = async() =>{\n      try{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting..\"});\n        await web3.eth.getTransactionReceipt(this.state.transactionHash,\n          (err,txReceipt) => {\n            console.log(err,txReceipt);\n            this.setState({txReceipt});\n          });\n\n          await this.setState({blockNumber:this.state.txReceipt.blockNumber});\n\n          await this.setState({gasUsed:this.state.txReceipt.gasUsed});\n        }//end of try {\n        catch(error){\n          console.log(error);\n        }\n      }//end of onClick\n\n}\n"]},"metadata":{},"sourceType":"module"}