{"ast":null,"code":"var _jsxFileName = \"/Users/hewhew/Downloads/create react app/eth-ipfs/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ipfsHash: '',\n      ethAddress: '',\n      storedHash: '',\n      ethAccAddress: ''\n    };\n\n    this.getHash = async event => {\n      event.preventDefault();\n      /*try{\n         await web3.eth.getTransactionReceipt(this.state.transactionHash,\n          (err,txReceipt) => {\n            console.log(err,txReceipt);\n            this.setState({txReceipt});\n          });\n         }//end of try {\n        catch(error){\n          console.log(error);\n        }*/\n\n      const ethAddress = await storehash.options.address;\n      this.setState({\n        ethAddress\n      });\n      const accounts = await web3.eth.getAccounts();\n      const ethAccAddress = accounts[0];\n      this.setState({\n        ethAccAddress\n      }); //get hash from contract\n\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        }); //call contract methods\n\n        storehash.methods.saveHash(this.state.ipfsHash).send({\n          from: accounts[0]\n        }, (error, transactionHash) => {\n          console.log(transactionHash);\n          this.setState({\n            transactionHash\n          });\n        });\n      });\n      await storehash.methods.getHash().call();\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault(); //user's metamask account\n\n      const accounts = await web3.eth.getAccounts();\n      console.log('Sending from Metamask account: ' + accounts[0]); //const ethAddress = await storehash.options.address;\n      //this.setState({ethAddress});\n      //upload to ipfs\n\n      /*await ipfs.add(this.state.buffer,(err,ipfsHash) => {\n        console.log(err,ipfsHash);\n        this.setState({ipfsHash:ipfsHash[0].hash});\n         //call contract methods\n        storehash.methods.saveHash(this.state.ipfsHash).send(\n          {from:accounts[0]},(error,transactionHash) => {\n            console.log(transactionHash);\n            this.setState({transactionHash});\n          });\n        })*/\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"grid\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Set new hash \"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      bsStyle: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"SetHash \")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getHash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" Get Saved Hash \"), React.createElement(\"table\", {\n      bordered: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Tx Receipt Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Values\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"IPFS Hash # stored on Eth Contract\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.ipfsHash)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Ethereum Contract Address\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.ethAddress)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"From Account\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.ethAccAddress))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hewhew/Downloads/create react app/eth-ipfs/src/App.js"],"names":["React","Component","web3","ipfs","storehash","App","state","ipfsHash","ethAddress","storedHash","ethAccAddress","getHash","event","preventDefault","options","address","setState","accounts","eth","getAccounts","add","buffer","err","console","log","hash","methods","saveHash","send","from","error","transactionHash","call","onSubmit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBK,KAFyB,GAEjB;AACNC,MAAAA,QAAQ,EAAC,EADH;AAENC,MAAAA,UAAU,EAAC,EAFL;AAGNC,MAAAA,UAAU,EAAC,EAHL;AAINC,MAAAA,aAAa,EAAC;AAJR,KAFiB;;AAAA,SASvBC,OATuB,GASb,MAAMC,KAAN,IAAe;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA;;;;;;;;;;;AAYE,YAAML,UAAU,GAAG,MAAMJ,SAAS,CAACU,OAAV,CAAkBC,OAA3C;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd;AACA,YAAMS,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMT,aAAa,GAAGO,QAAQ,CAAC,CAAD,CAA9B;AACA,WAAKD,QAAL,CAAc;AAACN,QAAAA;AAAD,OAAd,EAlBqB,CAoBrB;;AACA,YAAMP,IAAI,CAACiB,GAAL,CAAS,KAAKd,KAAL,CAAWe,MAApB,EAA2B,CAACC,GAAD,EAAKf,QAAL,KAAkB;AACjDgB,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgBf,QAAhB;AACA,aAAKS,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAACA,QAAQ,CAAC,CAAD,CAAR,CAAYkB;AAAtB,SAAd,EAFiD,CAIjD;;AACArB,QAAAA,SAAS,CAACsB,OAAV,CAAkBC,QAAlB,CAA2B,KAAKrB,KAAL,CAAWC,QAAtC,EAAgDqB,IAAhD,CACE;AAACC,UAAAA,IAAI,EAACZ,QAAQ,CAAC,CAAD;AAAd,SADF,EACqB,CAACa,KAAD,EAAOC,eAAP,KAA2B;AAC5CR,UAAAA,OAAO,CAACC,GAAR,CAAYO,eAAZ;AACA,eAAKf,QAAL,CAAc;AAACe,YAAAA;AAAD,WAAd;AACD,SAJH;AAKC,OAVG,CAAN;AAYA,YAAM3B,SAAS,CAACsB,OAAV,CAAkBf,OAAlB,GAA4BqB,IAA5B,EAAN;AAED,KA5CoB;;AAAA,SA8CrBC,QA9CqB,GA8CV,MAAOrB,KAAP,IAAgB;AACzBA,MAAAA,KAAK,CAACC,cAAN,GADyB,CAGzB;;AACA,YAAMI,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCP,QAAQ,CAAC,CAAD,CAAxD,EALyB,CAOzB;AACA;AAEA;;AACA;;;;;;;;;;AAWC,KApEkB;AAAA;;AAsEvBiB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKD,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFF,EAOU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPV,EAQU;AAAQ,MAAA,OAAO,EAAI,KAAKtB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARV,EAUA;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,UAAU,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CADN,EAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWC,QAAhB,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,UAAhB,CAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWI,aAAhB,CAFF,CATF,CARN,CAVA,CADF,CADF;AAsCD;;AA7GsB;;AAgH3B,eAAeL,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component{\n\n  state = {\n    ipfsHash:'',\n    ethAddress:'',\n    storedHash:'',\n    ethAccAddress:''\n  };\n\n    getHash = async(event) =>{\n      event.preventDefault();\n      /*try{\n\n        await web3.eth.getTransactionReceipt(this.state.transactionHash,\n          (err,txReceipt) => {\n            console.log(err,txReceipt);\n            this.setState({txReceipt});\n          });\n\n        }//end of try {\n        catch(error){\n          console.log(error);\n        }*/\n        const ethAddress = await storehash.options.address;\n        this.setState({ethAddress});\n        const accounts = await web3.eth.getAccounts();\n        const ethAccAddress = accounts[0];\n        this.setState({ethAccAddress});\n\n        //get hash from contract\n        await ipfs.add(this.state.buffer,(err,ipfsHash) => {\n          console.log(err,ipfsHash);\n          this.setState({ipfsHash:ipfsHash[0].hash});\n\n          //call contract methods\n          storehash.methods.saveHash(this.state.ipfsHash).send(\n            {from:accounts[0]},(error,transactionHash) => {\n              console.log(transactionHash);\n              this.setState({transactionHash});\n            });\n          })\n\n        await storehash.methods.getHash().call();\n\n      };//end of onClick\n\n      onSubmit = async (event) =>{\n        event.preventDefault();\n\n        //user's metamask account\n        const accounts = await web3.eth.getAccounts();\n        console.log('Sending from Metamask account: ' + accounts[0]);\n\n        //const ethAddress = await storehash.options.address;\n        //this.setState({ethAddress});\n\n        //upload to ipfs\n        /*await ipfs.add(this.state.buffer,(err,ipfsHash) => {\n          console.log(err,ipfsHash);\n          this.setState({ipfsHash:ipfsHash[0].hash});\n\n          //call contract methods\n          storehash.methods.saveHash(this.state.ipfsHash).send(\n            {from:accounts[0]},(error,transactionHash) => {\n              console.log(transactionHash);\n              this.setState({transactionHash});\n            });\n          })*/\n        };\n\n    render(){\n      return(\n        <div className=\"App\">\n          <grid>\n            <h3> Set new hash </h3>\n            <form onSubmit={this.onSubmit}>\n              <input type=\"text\"/>\n                <button bsStyle=\"primary\" type=\"submit\">\n                    SetHash </button>\n                    </form>\n                    <hr/>\n                    <button onClick = {this.getHash}> Get Saved Hash </button>\n\n          <table bordered responsive>\n                <thead>\n                  <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr>\n                    <td>IPFS Hash # stored on Eth Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                  </tr>\n                  <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                  </tr>\n                  <tr>\n                    <td>From Account</td>\n                    <td>{this.state.ethAccAddress}</td>\n                  </tr>\n                </tbody>\n            </table>\n        </grid>\n     </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}